#+title: sml-rmath: SML library for the Rmath library with implementations in mlton, polyml and mosml

#+OPTIONS: H:3 toc:nil num:nil

This library uses =m4= to generate code to interface with the libRmath library.

For installation in MosML, the user may need to change the path to the headers for MosML (currently "/usr/local/include/mosml").

Simple use is to run =make=, which generates the codes, and =make test= to run the tests.

A handful of functions (=rmultinom=, =lgammafn_sign=) are not currently available for MosML.

Feedback is more than welcome!

#+BEGIN_SRC bash :exports both :results org
echo NOTE: tidy up
make clean 
echo NOTE: code generation using m4
make
echo NOTE: run some tests
make test
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
NOTE: tidy up
rm -f rmath-mlton rmath-mlton.sml
rm -f rmath-polyml rmath-polyml.sml
rm -f rmath-mosml.c rmath-mosml.sml librmath-mosml.so
NOTE: code generation using m4
m4   rmath-mlton.sml.in > rmath-mlton.sml
m4   -D LIBRMATH=/usr/lib/libRmath.so rmath-polyml.sml.in > rmath-polyml.sml
m4   rmath-mosml.c.in > rmath-mosml.c
m4   -D DLLNAME=librmath-mosml.so rmath-mosml.sml.in > rmath-mosml.sml
cc -I/usr/local/include/mosml -I/usr/share/R/include -fPIC -shared -o librmath-mosml.so rmath-mosml.c -lRmath -lm
NOTE: run some tests
mlton -default-ann 'allowFFI true' -link-opt '-lRmath' test-mlton.mlb
./test-mlton
1.95996398454
0.665693785434
0.474611803353
rm test-mlton
poly --script test-polyml.sml
1.95996398454
0.665693785434
0.474611803353
mosml test-mosml.sml
Moscow ML version 2.10
Enter `quit();' to quit.
[opening file "test-mosml.sml"]
[opening file "rmath-mosml.sml"]
> val it = () : unit
> signature RMATH =
  /\=test_alternative.
    {datatype test_alternative =
       (test_alternative,
        {con Greater : test_alternative,
         con Less : test_alternative,
         con TwoSided : test_alternative}),
     con Greater : test_alternative,
     con Less : test_alternative,
     con TwoSided : test_alternative,
     val M_E : real,
     val M_LOG2E : real,
     val M_LOG10E : real,
     val M_LN2 : real,
     val M_LN10 : real,
     val M_PI : real,
     val M_2PI : real,
     val M_PI_2 : real,
     val M_PI_4 : real,
     val M_1_PI : real,
     val M_2_PI : real,
     val M_2_SQRTPI : real,
     val M_SQRT2 : real,
     val M_SQRT1_2 : real,
     val M_SQRT_3 : real,
     val M_SQRT_32 : real,
     val M_LOG10_2 : real,
     val M_SQRT_PI : real,
     val M_1_SQRT_2PI : real,
     val M_SQRT_2dPI : real,
     val M_LN_2PI : real,
     val M_LN_SQRT_PI : real,
     val M_LN_SQRT_2PI : real,
     val M_LN_SQRT_PId2 : real,
     val R_pow : real * real -> real,
     val R_pow_di : real * int -> real,
     val norm_rand : unit -> real,
     val unif_rand : unit -> real,
     val exp_rand : unit -> real,
     val pnorm5 : real * real * real * int * int -> real,
     val qnorm5 : real * real * real * int * int -> real,
     val dnorm4 : real * real * real * int -> real,
     val rnorm : real * real -> real,
     val punif : real * real * real * int * int -> real,
     val qunif : real * real * real * int * int -> real,
     val dunif : real * real * real * int -> real,
     val runif : real * real -> real,
     val pgamma : real * real * real * int * int -> real,
     val qgamma : real * real * real * int * int -> real,
     val dgamma : real * real * real * int -> real,
     val rgamma : real * real -> real,
     val log1pmx : real -> real,
     val Rf_log1pexp : real -> real,
     val lgamma1p : real -> real,
     val logspace_add : real * real -> real,
     val logspace_sub : real * real -> real,
     val pbeta : real * real * real * int * int -> real,
     val qbeta : real * real * real * int * int -> real,
     val dbeta : real * real * real * int -> real,
     val rbeta : real * real -> real,
     val plnorm : real * real * real * int * int -> real,
     val qlnorm : real * real * real * int * int -> real,
     val dlnorm : real * real * real * int -> real,
     val rlnorm : real * real -> real,
     val pchisq : real * real * int * int -> real,
     val qchisq : real * real * int * int -> real,
     val dchisq : real * real * int -> real,
     val rchisq : real -> real,
     val pnchisq : real * real * real * int * int -> real,
     val qnchisq : real * real * real * int * int -> real,
     val dnchisq : real * real * real * int -> real,
     val rnchisq : real * real -> real,
     val pf : real * real * real * int * int -> real,
     val qf : real * real * real * int * int -> real,
     val df : real * real * real * int -> real,
     val rf : real * real -> real,
     val pt : real * real * int * int -> real,
     val qt : real * real * int * int -> real,
     val dt : real * real * int -> real,
     val rt : real -> real,
     val pbinom : real * real * real * int * int -> real,
     val qbinom : real * real * real * int * int -> real,
     val dbinom : real * real * real * int -> real,
     val rbinom : real * real -> real,
     val pcauchy : real * real * real * int * int -> real,
     val qcauchy : real * real * real * int * int -> real,
     val dcauchy : real * real * real * int -> real,
     val rcauchy : real * real -> real,
     val pexp : real * real * int * int -> real,
     val qexp : real * real * int * int -> real,
     val dexp : real * real * int -> real,
     val rexp : real -> real,
     val pgeom : real * real * int * int -> real,
     val qgeom : real * real * int * int -> real,
     val dgeom : real * real * int -> real,
     val rgeom : real -> real,
     val phyper : real * real * real * real * int * int -> real,
     val qhyper : real * real * real * real * int * int -> real,
     val dhyper : real * real * real * real * int -> real,
     val rhyper : real * real * real -> real,
     val pnbinom : real * real * real * int * int -> real,
     val qnbinom : real * real * real * int * int -> real,
     val dnbinom : real * real * real * int -> real,
     val rnbinom : real * real -> real,
     val ppois : real * real * int * int -> real,
     val qpois : real * real * int * int -> real,
     val dpois : real * real * int -> real,
     val rpois : real -> real,
     val pweibull : real * real * real * int * int -> real,
     val qweibull : real * real * real * int * int -> real,
     val dweibull : real * real * real * int -> real,
     val rweibull : real * real -> real,
     val plogis : real * real * real * int * int -> real,
     val qlogis : real * real * real * int * int -> real,
     val dlogis : real * real * real * int -> real,
     val rlogis : real * real -> real,
     val pnbeta : real * real * real * real * int * int -> real,
     val qnbeta : real * real * real * real * int * int -> real,
     val dnbeta : real * real * real * real * int -> real,
     val pnf : real * real * real * real * int * int -> real,
     val qnf : real * real * real * real * int * int -> real,
     val dnf : real * real * real * real * int -> real,
     val pnt : real * real * real * int * int -> real,
     val qnt : real * real * real * int * int -> real,
     val dnt : real * real * real * int -> real,
     val ptukey : real * real * real * real * int * int -> real,
     val qtukey : real * real * real * real * int * int -> real,
     val pwilcox : real * real * real * int * int -> real,
     val qwilcox : real * real * real * int * int -> real,
     val dwilcox : real * real * real * int -> real,
     val rwilcox : real * real -> real,
     val psignrank : real * real * int * int -> real,
     val qsignrank : real * real * int * int -> real,
     val dsignrank : real * real * int -> real,
     val rsignrank : real -> real,
     val gammafn : real -> real,
     val lgammafn : real -> real,
     val psigamma : real * real -> real,
     val digamma : real -> real,
     val trigamma : real -> real,
     val tetragamma : real -> real,
     val pentagamma : real -> real,
     val beta : real * real -> real,
     val lbeta : real * real -> real,
     val choose : real * real -> real,
     val lchoose : real * real -> real,
     val bessel_i : real * real * real -> real,
     val bessel_j : real * real -> real,
     val bessel_k : real * real * real -> real,
     val bessel_y : real * real -> real,
     val fmax2 : real * real -> real,
     val fmin2 : real * real -> real,
     val sign : real -> real,
     val fprec : real * real -> real,
     val fround : real * real -> real,
     val fsign : real * real -> real,
     val ftrunc : real -> real,
     val cospi : real -> real,
     val sinpi : real -> real,
     val tanpi : real -> real,
     val qnorm : real * real * real * int * int -> real,
     val pnorm : real * real * real * int * int -> real,
     val dnorm : real * real * real * int -> real,
     val get_seed : unit -> int * int,
     val set_seed : int * int -> unit,
     val poisson_ci : real * real * test_alternative -> real * real,
     val poisson_test : real * real * real * test_alternative -> real}
> New type names: =test_alternative
  structure Rmath :
  {datatype test_alternative =
     (test_alternative,
      {con Greater : test_alternative,
       con Less : test_alternative,
       con TwoSided : test_alternative}),
   con Greater : test_alternative,
   con Less : test_alternative,
   val M_1_PI : real,
   val M_1_SQRT_2PI : real,
   val M_2PI : real,
   val M_2_PI : real,
   val M_2_SQRTPI : real,
   val M_E : real,
   val M_LN10 : real,
   val M_LN2 : real,
   val M_LN_2PI : real,
   val M_LN_SQRT_2PI : real,
   val M_LN_SQRT_PI : real,
   val M_LN_SQRT_PId2 : real,
   val M_LOG10E : real,
   val M_LOG10_2 : real,
   val M_LOG2E : real,
   val M_PI : real,
   val M_PI_2 : real,
   val M_PI_4 : real,
   val M_SQRT1_2 : real,
   val M_SQRT2 : real,
   val M_SQRT_2dPI : real,
   val M_SQRT_3 : real,
   val M_SQRT_32 : real,
   val M_SQRT_PI : real,
   val R_pow : real * real -> real,
   val R_pow_di : real * int -> real,
   val Rf_log1pexp : real -> real,
   con TwoSided : test_alternative,
   val bessel_i : real * real * real -> real,
   val bessel_j : real * real -> real,
   val bessel_k : real * real * real -> real,
   val bessel_y : real * real -> real,
   val beta : real * real -> real,
   val choose : real * real -> real,
   val cospi : real -> real,
   val dbeta : real * real * real * int -> real,
   val dbinom : real * real * real * int -> real,
   val dcauchy : real * real * real * int -> real,
   val dchisq : real * real * int -> real,
   val dexp : real * real * int -> real,
   val df : real * real * real * int -> real,
   val dgamma : real * real * real * int -> real,
   val dgeom : real * real * int -> real,
   val dhyper : real * real * real * real * int -> real,
   val digamma : real -> real,
   val dlnorm : real * real * real * int -> real,
   val dlogis : real * real * real * int -> real,
   val dnbeta : real * real * real * real * int -> real,
   val dnbinom : real * real * real * int -> real,
   val dnchisq : real * real * real * int -> real,
   val dnf : real * real * real * real * int -> real,
   val dnorm : real * real * real * int -> real,
   val dnorm4 : real * real * real * int -> real,
   val dnt : real * real * real * int -> real,
   val dpois : real * real * int -> real,
   val dsignrank : real * real * int -> real,
   val dt : real * real * int -> real,
   val dunif : real * real * real * int -> real,
   val dweibull : real * real * real * int -> real,
   val dwilcox : real * real * real * int -> real,
   val exp_rand : unit -> real,
   val fmax2 : real * real -> real,
   val fmin2 : real * real -> real,
   val fprec : real * real -> real,
   val fround : real * real -> real,
   val fsign : real * real -> real,
   val ftrunc : real -> real,
   val gammafn : real -> real,
   val get_seed : unit -> int * int,
   val lbeta : real * real -> real,
   val lchoose : real * real -> real,
   val lgamma1p : real -> real,
   val lgammafn : real -> real,
   val log1pmx : real -> real,
   val logspace_add : real * real -> real,
   val logspace_sub : real * real -> real,
   val norm_rand : unit -> real,
   val pbeta : real * real * real * int * int -> real,
   val pbinom : real * real * real * int * int -> real,
   val pcauchy : real * real * real * int * int -> real,
   val pchisq : real * real * int * int -> real,
   val pentagamma : real -> real,
   val pexp : real * real * int * int -> real,
   val pf : real * real * real * int * int -> real,
   val pgamma : real * real * real * int * int -> real,
   val pgeom : real * real * int * int -> real,
   val phyper : real * real * real * real * int * int -> real,
   val plnorm : real * real * real * int * int -> real,
   val plogis : real * real * real * int * int -> real,
   val pnbeta : real * real * real * real * int * int -> real,
   val pnbinom : real * real * real * int * int -> real,
   val pnchisq : real * real * real * int * int -> real,
   val pnf : real * real * real * real * int * int -> real,
   val pnorm : real * real * real * int * int -> real,
   val pnorm5 : real * real * real * int * int -> real,
   val pnt : real * real * real * int * int -> real,
   val poisson_ci : real * real * test_alternative -> real * real,
   val poisson_test : real * real * real * test_alternative -> real,
   val ppois : real * real * int * int -> real,
   val psigamma : real * real -> real,
   val psignrank : real * real * int * int -> real,
   val pt : real * real * int * int -> real,
   val ptukey : real * real * real * real * int * int -> real,
   val punif : real * real * real * int * int -> real,
   val pweibull : real * real * real * int * int -> real,
   val pwilcox : real * real * real * int * int -> real,
   val qbeta : real * real * real * int * int -> real,
   val qbinom : real * real * real * int * int -> real,
   val qcauchy : real * real * real * int * int -> real,
   val qchisq : real * real * int * int -> real,
   val qexp : real * real * int * int -> real,
   val qf : real * real * real * int * int -> real,
   val qgamma : real * real * real * int * int -> real,
   val qgeom : real * real * int * int -> real,
   val qhyper : real * real * real * real * int * int -> real,
   val qlnorm : real * real * real * int * int -> real,
   val qlogis : real * real * real * int * int -> real,
   val qnbeta : real * real * real * real * int * int -> real,
   val qnbinom : real * real * real * int * int -> real,
   val qnchisq : real * real * real * int * int -> real,
   val qnf : real * real * real * real * int * int -> real,
   val qnorm : real * real * real * int * int -> real,
   val qnorm5 : real * real * real * int * int -> real,
   val qnt : real * real * real * int * int -> real,
   val qpois : real * real * int * int -> real,
   val qsignrank : real * real * int * int -> real,
   val qt : real * real * int * int -> real,
   val qtukey : real * real * real * real * int * int -> real,
   val qunif : real * real * real * int * int -> real,
   val qweibull : real * real * real * int * int -> real,
   val qwilcox : real * real * real * int * int -> real,
   val rbeta : real * real -> real,
   val rbinom : real * real -> real,
   val rcauchy : real * real -> real,
   val rchisq : real -> real,
   val rexp : real -> real,
   val rf : real * real -> real,
   val rgamma : real * real -> real,
   val rgeom : real -> real,
   val rhyper : real * real * real -> real,
   val rlnorm : real * real -> real,
   val rlogis : real * real -> real,
   val rnbinom : real * real -> real,
   val rnchisq : real * real -> real,
   val rnorm : real * real -> real,
   val rpois : real -> real,
   val rsignrank : real -> real,
   val rt : real -> real,
   val runif : real * real -> real,
   val rweibull : real * real -> real,
   val rwilcox : real * real -> real,
   val set_seed : int * int -> unit,
   val sign : real -> real,
   val sinpi : real -> real,
   val tanpi : real -> real,
   val tetragamma : real -> real,
   val trigamma : real -> real,
   val unif_rand : unit -> real}
[closing file "rmath-mosml.sml"]
> val it = () : unit
[opening file "test-main.sml"]
> val main = fn : unit -> bool
[closing file "test-main.sml"]
> val it = () : unit
1.95996398454
0.665693785434
0.474611803353
#+END_SRC

